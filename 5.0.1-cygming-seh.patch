--- origsrc/libcxxabi-5.0.1.src/src/cxa_personality.cpp	2017-03-30 18:31:33.000000000 -0500
+++ src/libcxxabi-5.0.1.src/src/cxa_personality.cpp	2018-01-03 16:52:19.378971800 -0600
@@ -23,6 +23,11 @@
 #include "private_typeinfo.h"
 #include "unwind.h"
 
+#if defined(__SEH__) && !defined(__USING_SJLJ_EXCEPTIONS__)
+#define WIN32_LEAN_AND_MEAN
+#include <windows.h>
+#endif
+
 /*
     Exception Header Layout:
 
@@ -934,12 +939,17 @@ _UA_CLEANUP_PHASE
 */
 
 #if !defined(_LIBCXXABI_ARM_EHABI)
+#if defined(__SEH__) && !defined(__USING_SJLJ_EXCEPTIONS__)
+static _Unwind_Reason_Code
+__gxx_personality_imp
+#else
 _LIBCXXABI_FUNC_VIS _Unwind_Reason_Code
 #ifdef __USING_SJLJ_EXCEPTIONS__
 __gxx_personality_sj0
 #else
 __gxx_personality_v0
 #endif
+#endif
                     (int version, _Unwind_Action actions, uint64_t exceptionClass,
                      _Unwind_Exception* unwind_exception, _Unwind_Context* context)
 {
@@ -1169,6 +1176,19 @@ __gxx_personality_v0(_Unwind_State state
 }
 #endif
 
+#if defined(__SEH__) && !defined(__USING_SJLJ_EXCEPTIONS__)
+extern EXCEPTION_DISPOSITION
+_GCC_specific_handler (PEXCEPTION_RECORD, void *, PCONTEXT,
+                       PDISPATCHER_CONTEXT, _Unwind_Personality_Fn);
+
+_LIBCXXABI_FUNC_VIS EXCEPTION_DISPOSITION
+__gxx_personality_seh0 (PEXCEPTION_RECORD ms_exc, void *this_frame,
+                        PCONTEXT ms_orig_context, PDISPATCHER_CONTEXT ms_disp)
+{
+  return _GCC_specific_handler(ms_exc, this_frame, ms_orig_context,
+                               ms_disp, __gxx_personality_imp);
+}
+#endif
 
 __attribute__((noreturn))
 _LIBCXXABI_FUNC_VIS void
